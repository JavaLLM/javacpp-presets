// Targeted by JavaCPP version 1.5.10-SNAPSHOT: DO NOT EDIT THIS FILE

package org.javallm.llamacpp;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.javallm.llamacpp.global.llama.*;


    // scratch buffer
    @Properties(inherit = org.javallm.llamacpp.presets.llama.class)
public class ggml_scratch extends Pointer {
        static { Loader.load(); }
        /** Default native constructor. */
        public ggml_scratch() { super((Pointer)null); allocate(); }
        /** Native array allocator. Access with {@link Pointer#position(long)}. */
        public ggml_scratch(long size) { super((Pointer)null); allocateArray(size); }
        /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
        public ggml_scratch(Pointer p) { super(p); }
        private native void allocate();
        private native void allocateArray(long size);
        @Override public ggml_scratch position(long position) {
            return (ggml_scratch)super.position(position);
        }
        @Override public ggml_scratch getPointer(long i) {
            return new ggml_scratch((Pointer)this).offsetAddress(i);
        }
    
        public native @Cast("size_t") long offs(); public native ggml_scratch offs(long setter);
        public native @Cast("size_t") long size(); public native ggml_scratch size(long setter);
        public native Pointer data(); public native ggml_scratch data(Pointer setter);
    }
